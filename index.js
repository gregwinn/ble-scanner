// Generated by CoffeeScript 1.4.0
var BleScanner, spawn;

spawn = require('child_process').spawn;

BleScanner = (function() {
  var filterHciDump, init, instance;

  instance = void 0;

  init = function(hcidev, callback) {
    this.hcidev = hcidev;
    this.hciconfig = spawn('hciconfig', [this.hcidev, 'up']);
    this.hcidump = spawn('hcidump', ['-R']);
    return this.hciconfig.on("exit", function(code) {
      if (code !== 0) {
        return console.log("HCICONFIG: failed to bring up device " + this.hcidev);
      } else {
        console.log("HCICONFIG: succesfully brought up device " + this.hcidev);
        this.clearHciDump = spawn("killall", ["hcidump"]);
        this.clearHciTool = spawn("killall", ["hcitool"]);
        this.clearHciTool.on("exit", function(code) {
          console.log("HCITOOL: cleared (code " + code + ")");
          this.hcitool = spawn('hcitool', ['lescan']);
          return this.hcitool.on("exit", function(code) {
            if (code === 1) {
              return console.log("HCITOOL: exited, already running? (code 1)");
            } else {
              console.log("HCITOOL: exited (code " + code + ")");
              return instance = void 0;
            }
          });
        });
        return this.clearHciDump.on("exit", function(code) {
          console.log("cleared hcidump (" + code + ")");
          this.hcidump = spawn('hcidump', ['-R']);
          this.hcidump.on("exit", function(code) {
            console.log("hcidump exited (" + code + ") ... killing instance");
            return instance = void 0;
          });
          return this.hcidump.stdout.on('data', function(data) {
            data = filterHciDump(data);
            return callback(data);
          });
        });
      }
    });
  };

  function BleScanner(hcidev, callback) {
    if (!instance) {
      instance = init(hcidev, callback);
    }
    instance;

  }

  filterHciDump = function(data) {
    var output;
    output = (data.slice(5)).toString('ascii');
    output = output.replace(/(\r\n|\n|\r)/gm, "");
    output.replace(/\s+/g, " ");
    return output = output.split(" ");
  };

  return BleScanner;

})();

module.exports = BleScanner;
